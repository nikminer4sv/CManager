@using Microsoft.AspNetCore.Identity
@model IEnumerable<CManager.Models.User>
@inject UserManager<User> UserManager

@{
    var data = (ApplicationDbContext) ViewBag.Context;
    var currentUser = Model.FirstOrDefault(u => u.Email == User.Identity.Name);
}

<div class="container block2">
    <div class="container">
        <div style="display:flex;justify-content:start;align-items:start;">
            <button theme-dark="btn-light" theme-light="btn-dark" type="button" onclick="blockCheckedContacts()" class="btn btn-dark btn-lg btn-block lng-Block" style="margin-right: 1em;!important;">Block</button>
            <button theme-dark="btn-light" theme-light="btn-dark" type="button" onclick="unblockCheckedContacts()" class="btn btn-dark btn-lg btn-block lng-Unblock" style="margin-right: 1em;!important;">Unblock</button>
            <button theme-dark="btn-light" theme-light="btn-dark" type="button" onclick="deleteCheckedContacts()" class="btn btn-dark btn-lg btn-block lng-Delete">Delete</button>
        </div>
        <br/>
        <table theme-dark="text-white" theme-light="text-dark" class="table table-responsive text-dark">
            <thead>
            <tr>
            </tr>
            <tr>
                <th></th>
                <th class="theme-main-text">Id</th>
                <th class="col-md-3 col-xs-3 lng-FirstName theme-main-text">First Name</th>
                <th class="col-md-3 col-xs-3 lng-LastName theme-main-text">Last Name</th>
                <th class="col-md-3 col-xs-3 lng-Email theme-main-text">E-mail</th>
                <th class="col-md-3 col-xs-3 lng-UserName theme-main-text">Nickname</th>
                <th class="col-md-3 col-xs-3 lng-Role theme-main-text">Role:</th>
                <th class="col-md-3 col-xs-3 lng-RegisterDate theme-main-text">Registration</th>
                <th class="col-md-3 col-xs-3 lng-Status theme-main-text">Status</th>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="flexCheckIndeterminate">
                    <label class="form-check-label" for="flexCheckIndeterminate">
                        <b theme-dark="text-white" theme-light="text-dark" class="lng-SelectAll text-dark">Select all</b>
                    </label>
                </div>
            </tr>
            </thead>
            <tbody>

            @foreach (var user in Model)
            {
                <tr>
                    <td>
                        @if (!(UserManager.IsInRoleAsync(user, "admin").Result))
                        {
                            <input class="user-checkbox" type="checkbox" name="@user.Id"/>
                        }
                    </td>

                    <td scope="row" class="theme-main-text">@user.Id</td>
                    <td class="theme-main-text">@user.FirstName</td>
                    <td class="theme-main-text">@user.LastName</td>
                    <td class="theme-main-text">@user.Email</td>
                    <td class="theme-main-text">@user.NickName</td>
                    <td class="theme-main-text">@user.Role</td>
                    <td class="theme-main-text">@user.RegisterDate.ToString("d")</td>
                    <td class="theme-main-text">@user.Status</td>
                </tr>
            }
            </tbody>
        </table>

    </div>
</div>

<script src="~/js/AdminOptions.js"></script>
<script src="https://snipp.ru/cdn/jquery/2.1.1/jquery.min.js"></script>
<script>function checkAll() {
}
$('#flexCheckIndeterminate').click(function(event) {
            if(this.checked) {
                $(':checkbox').each(function() {
                    this.checked = true;
                });
            } else {
                $(':checkbox').each(function() {
                    this.checked = false;
                });
            }
        }); </script>